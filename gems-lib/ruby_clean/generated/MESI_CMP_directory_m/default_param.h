static const char *global_default_param =
"//\n"
"// This file has been modified by Kevin Moore and Dan Nussbaum of the\n"
"// Scalable Systems Research Group at Sun Microsystems Laboratories\n"
"// (http://research.sun.com/scalable/) to support the Adaptive\n"
"// Transactional Memory Test Platform (ATMTP).  For information about\n"
"// ATMTP, see the GEMS website: http://www.cs.wisc.edu/gems/.\n"
"//\n"
"// Please send email to atmtp-interest@sun.com with feedback, questions, or\n"
"// to request future announcements about ATMTP.\n"
"//\n"
"// ----------------------------------------------------------------------\n"
"//\n"
"// File modification date: 2008-02-23\n"
"//\n"
"// ----------------------------------------------------------------------\n"
"//\n"
"// ATMTP is distributed as part of the GEMS software toolset and is\n"
"// available for use and modification under the terms of version 2 of the\n"
"// GNU General Public License.  The GNU General Public License is contained\n"
"// in the file $GEMS/LICENSE.\n"
"//\n"
"// Multifacet GEMS is free software; you can redistribute it and/or modify\n"
"// it under the terms of version 2 of the GNU General Public License as\n"
"// published by the Free Software Foundation.\n"
"//\n"
"// Multifacet GEMS is distributed in the hope that it will be useful, but\n"
"// WITHOUT ANY WARRANTY; without even the implied warranty of\n"
"// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n"
"// General Public License for more details.\n"
"//\n"
"// You should have received a copy of the GNU General Public License along\n"
"// with the Multifacet GEMS; if not, write to the Free Software Foundation,\n"
"// Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA\n"
"//\n"
"// ----------------------------------------------------------------------\n"
"//\n"
"\n"
"g_RANDOM_SEED: 1\n"
"g_SIMICS: true\n"
"\n"
"g_DEADLOCK_THRESHOLD: 500000\n"
"\n"
"// determines how many Simics cycles advance for every Ruby cycle \n"
"//  (does not apply when running Opal)\n"
"SIMICS_RUBY_MULTIPLIER: 4\n"
"\n"
"// corresponding parameter when using Opal+Ruby+Simics\n"
"OPAL_RUBY_MULTIPLIER: 1\n"
"\n"
"\n"
"// Ruby cycles between when a sequencer issues a request and it arrives at\n"
"// the L1 cache controller\n"
"//\n"
"// ** important ** this parameter determines the L2 hit latency when \n"
"//  using the SMP protocols with a combined L1/L2 controller (-cache.sm) \n"
"//\n"
"SEQUENCER_TO_CONTROLLER_LATENCY: 4\n"
"\n"
"\n"
"// When set to false, the L1 cache structures are probed for a hit in Sequencer.C\n"
"//  If a request hits, it is *not* issued to the cache controller\n"
"// When set to true, all processor data requests issue to cache controller\n"
"// \n"
"// ** important ** this parameter must be set to false for proper L1/L2 hit timing\n"
"//  for the SMP protocols with combined L1/L2 controllers (-cache.sm)\n"
"//\n"
"REMOVE_SINGLE_CYCLE_DCACHE_FAST_PATH: true\n"
"\n"
"\n"
"// When running with Opal in SMT configurations, this indicates the number of threads per physical processor\n"
"g_NUM_SMT_THREADS: 1\n"
"\n"
"\n"
"// Maximum number of requests (including SW prefetches) outstanding from\n"
"// the sequencer (Note: this also include items buffered in the store\n"
"// buffer)\n"
"g_SEQUENCER_OUTSTANDING_REQUESTS: 16\n"
"\n"
"\n"
"PROTOCOL_DEBUG_TRACE: true\n"
"DEBUG_FILTER_STRING: none\n"
"DEBUG_VERBOSITY_STRING: none\n"
"DEBUG_START_TIME: 0\n"
"DEBUG_OUTPUT_FILENAME: none\n"
"\n"
"\n"
"TRANSACTION_TRACE_ENABLED: false\n"
"USER_MODE_DATA_ONLY: false\n"
"PROFILE_HOT_LINES: false\n"
"\n"
"PROFILE_ALL_INSTRUCTIONS: false\n"
"PRINT_INSTRUCTION_TRACE: false\n"
"g_DEBUG_CYCLE: 0\n"
"BLOCK_STC: false\n"
"PERFECT_MEMORY_SYSTEM: false\n"
"PERFECT_MEMORY_SYSTEM_LATENCY: 0\n"
"DATA_BLOCK: false\n"
"\n"
"\n"
"// *********************************************\n"
"// CACHE & MEMORY PARAMETERS\n"
"// *********************************************\n"
"\n"
"\n"
"L1_CACHE_ASSOC: 4\n"
"L1_CACHE_NUM_SETS_BITS: 8\n"
"L2_CACHE_ASSOC: 4 \n"
"L2_CACHE_NUM_SETS_BITS: 16 \n"
"\n"
"// 32 bits = 4 GB address space\n"
"g_MEMORY_SIZE_BYTES: 4294967296\n"
"g_DATA_BLOCK_BYTES: 64\n"
"g_PAGE_SIZE_BYTES: 4096\n"
"g_REPLACEMENT_POLICY: PSEDUO_LRU // currently, only other option is LRU\n"
"\n"
"\n"
"g_DRAM_SIZE_PER_CONTROLLER: 16384 // This is in MB for DRAMSim\n"
"\n"
"\n"
"g_PROCS_PER_CHIP: 4\n"
"\n"
"\n"
"// set automatically\n"
"g_NUM_PROCESSORS: 4\n"
"g_NUM_L2_BANKS: 4\n"
"g_NUM_MEMORIES: 4\n"
"\n"
"// The following group of parameters are calculated.  They must\n"
"// _always_ be left at zero.\n"
"g_NUM_CHIPS: 0\n"
"g_NUM_CHIP_BITS: 0\n"
"g_MEMORY_SIZE_BITS: 0\n"
"g_DATA_BLOCK_BITS: 0\n"
"g_PAGE_SIZE_BITS: 0\n"
"g_NUM_PROCESSORS_BITS: 0\n"
"g_PROCS_PER_CHIP_BITS: 0\n"
"g_NUM_L2_BANKS_BITS: 0\n"
"g_NUM_L2_BANKS_PER_CHIP: 0\n"
"g_NUM_L2_BANKS_PER_CHIP_BITS: 0\n"
"g_NUM_MEMORIES_BITS: 0\n"
"g_NUM_MEMORIES_PER_CHIP: 0\n"
"g_MEMORY_MODULE_BITS: 0\n"
"g_MEMORY_MODULE_BLOCKS: 0\n"
"\n"
"\n"
"// For certain CMP protocols, determines whether the lowest bits of a block address\n"
"// are used to index to a L2 cache bank or into the sets of a \n"
"// single bank\n"
"//        lowest                                                             highest \n"
"// true:   g_DATA_BLOCK_BITS | g_NUM_L2_BANKS_PER_CHIP_BITS | L2_CACHE_NUM_SETS_BITS\n"
"// false:  g_DATA_BLOCK_BITS | L2_CACHE_NUM_SETS_BITS | g_NUM_L2_BANKS_PER_CHIP_BITS\n"
"MAP_L2BANKS_TO_LOWEST_BITS: false\n"
"\n"
"\n"
"\n"
"// TIMING PARAMETERS  -- many of these are protocol specific.  See SLICC files\n"
"//                       to determine where they apply\n"
"\n"
"MEMORY_RESPONSE_LATENCY_MINUS_2: 158  // determines memory response latency\n"
"DIRECTORY_CACHE_LATENCY: 6\n"
"NULL_LATENCY: 1\n"
"ISSUE_LATENCY: 2\n"
"CACHE_RESPONSE_LATENCY: 12\n"
"L1_RESPONSE_LATENCY: 3\n"
"L2_RESPONSE_LATENCY: 6\n"
"L2_TAG_LATENCY: 6\n"
"DIRECTORY_LATENCY: 80\n"
"NETWORK_LINK_LATENCY: 1\n"
"COPY_HEAD_LATENCY: 4\n"
"ON_CHIP_LINK_LATENCY: 1\n"
"RECYCLE_LATENCY: 10\n"
"L2_RECYCLE_LATENCY: 5\n"
"TIMER_LATENCY: 10000\n"
"TBE_RESPONSE_LATENCY: 1\n"
"PERIODIC_TIMER_WAKEUPS: true\n"
"\n"
"\n"
"// constants used by CMP protocols\n"
"// cache bank access times\n"
"L1_REQUEST_LATENCY: 2\n"
"L2_REQUEST_LATENCY: 4\n"
"\n"
"\n"
"\n"
"\n"
"// Number of transitions each controller state machines can complete per cycle\n"
"// i.e. the number of ports to each controller\n"
"// L1cache is the sum of the L1I and L1D cache ports\n"
"L1CACHE_TRANSITIONS_PER_RUBY_CYCLE: 32\n"
"// Note: if SINGLE_ACCESS_L2_BANKS is enabled, this will probably enforce a \n"
"// much greater constraint on the concurrency of a L2 cache bank\n"
"L2CACHE_TRANSITIONS_PER_RUBY_CYCLE: 32\n"
"DIRECTORY_TRANSITIONS_PER_RUBY_CYCLE: 32\n"
"\n"
"\n"
"// Number of TBEs available for demand misses, ALL prefetches, and replacements\n"
"// used by one-level protocols\n"
"NUMBER_OF_TBES: 128\n"
"// two-level protocols\n"
"NUMBER_OF_L1_TBES: 32\n"
"NUMBER_OF_L2_TBES: 32\n"
"\n"
"// TSO is deprecated\n"
"TSO: false\n"
"\n"
"\n"
"// ** INTERCONECT PARAMETERS **\n"
"//\n"
"\n"
"g_PRINT_TOPOLOGY: true\n"
"g_NETWORK_TOPOLOGY: FILE_SPECIFIED\n"
"g_CACHE_DESIGN: ACCELERATOR // SHOULD NOT BE A NAME LESS THAN 3 chars because of some weird bug. PREFIX NAME FOR NETWORK FILE\n"
"FAN_OUT_DEGREE: 4  // for HIERARCHICAL SWITCH topology\n"
"\n"
"\n"
"g_adaptive_routing: true\n"
"NUMBER_OF_VIRTUAL_NETWORKS: 6\n"
"\n"
"// bandwidth unit is 1/1000 byte per cycle.  the following parameter is multiplied by\n"
"//  topology specific link weights\n"
"g_endpoint_bandwidth: 10000\n"
"\n"
"\n"
"// ** finite buffering parameters\n"
"//\n"
"// note: Finite buffering allows us to simulate a realistic virtual cut-through \n"
"// routed network with idealized flow control.  this feature is NOT heavily tested\n"
"FINITE_BUFFERING: false\n"
"// All message buffers within the network (i.e. the switch\'s input and \n"
"// output buffers) are set to the size specified below by the FINITE_BUFFER_SIZE\n"
"FINITE_BUFFER_SIZE: 3\n"
"// g_SEQUENCER_OUTSTANDING_REQUESTS (above) controlls the number of demand requests \n"
"// issued by the sequencer.  The PROCESSOR_BUFFER_SIZE controlls the \n"
"// number of requests in the mandatory queue\n"
"// Only effects the simualtion when FINITE_BUFFERING is enabled\n"
"PROCESSOR_BUFFER_SIZE: 10\n"
"// The PROTOCOL_BUFFER_SIZE limits the size of all other buffers connecting to\n"
"// Controllers.  Controlls the number of request issued by the L2 HW Prefetcher\n"
"PROTOCOL_BUFFER_SIZE: 32\n"
"// ** end finite buffering parameters\n"
"\n"
"\n"
"// (deprecated)\n"
"// Allows on a single accesses to a multi-cycle L2 bank.\n"
"// Ensures the cache array is only accessed once for every L2_REQUEST_LATENCY\n"
"// number of cycles.  However the TBE table can be accessed in parallel.\n"
"SINGLE_ACCESS_L2_BANKS: true\n"
"\n"
"\n"
"// constants used by TM protocols\n"
"PROFILE_EXCEPTIONS: false\n"
"PROFILE_XACT: true\n"
"PROFILE_NONXACT: false\n"
"XACT_DEBUG: true\n"
"XACT_DEBUG_LEVEL: 1\n"
"//XACT_MEMORY: true  // set to true for TM protocols. set it HERE for lazy systems to register the proper SIMICS interfaces\n"
"XACT_MEMORY: false\n"
"XACT_ENABLE_TOURMALINE: false // perfect memory system\n"
"XACT_NUM_CURRENT: 0 // must be 0\n"
"XACT_LAST_UPDATE: 0 // must be 0\n"
"XACT_ISOLATION_CHECK: false // Checks whether each memory access preserves transaction isolation\n"
"PERFECT_FILTER: true                // If true, use perfect physical read/write filters\n"
"READ_WRITE_FILTER: Perfect_\n"
"PERFECT_VIRTUAL_FILTER: true        // If true, use perfect virtual read/write filters\n"
"VIRTUAL_READ_WRITE_FILTER: Perfect_\n"
"PERFECT_SUMMARY_FILTER: true        // If true, use perfect summary read/write filters\n"
"SUMMARY_READ_WRITE_FILTER: Perfect_\n"
"XACT_EAGER_CD: true\n"
"XACT_LAZY_VM: false\n"
"XACT_CONFLICT_RES: BASE\n"
"XACT_COMMIT_TOKEN_LATENCY: 0\n"
"XACT_VISUALIZER: false\n"
"XACT_NO_BACKOFF: false\n"
"XACT_LOG_BUFFER_SIZE: 0\n"
"XACT_STORE_PREDICTOR_ENTRIES: 256\n"
"XACT_STORE_PREDICTOR_HISTORY: 256\n"
"XACT_STORE_PREDICTOR_THRESHOLD: 4\n"
"XACT_FIRST_ACCESS_COST: 0\n"
"XACT_FIRST_PAGE_ACCESS_COST: 0\n"
"ENABLE_MAGIC_WAITING: false\n"
"ENABLE_WATCHPOINT: false\n"
"XACT_ENABLE_VIRTUALIZATION_LOGTM_SE: false \n"
"// g_NETWORK_TOPOLOGY: FILE_SPECIFIED\n"
"// NUMBER_OF_VIRTUAL_NETWORKS: 5\n"
"// L2_REQUEST_LATENCY: 15\n"
"// SEQUENCER_TO_CONTROLLER_LATENCY: 3\n"
"// L2_RESPONSE_LATENCY: 20\n"
"// L2_TAG_LATENCY: 6\n"
"// MEMORY_RESPONSE_LATENCY_MINUS_2: 448\n"
"// RECYCLE_LATENCY: 1\n"
"// g_MEMORY_SIZE_BYTES: 268435456\n"
"// REMOVE_SINGLE_CYCLE_DCACHE_FAST_PATH: true\n"
"\n"
"// ATMTP\n"
"ATMTP_ENABLED: false\n"
"ATMTP_ABORT_ON_NON_XACT_INST: false\n"
"ATMTP_ALLOW_SAVE_RESTORE_IN_XACT: false\n"
"ATMTP_XACT_MAX_STORES: 32\n"
"ATMTP_DEBUG_LEVEL: 0\n"
"\n"
"// MOESI_CMP_token parameters (some might be deprecated)\n"
"g_FILTERING_ENABLED: false\n"
"g_DISTRIBUTED_PERSISTENT_ENABLED: true\n"
"g_RETRY_THRESHOLD: 1\n"
"g_DYNAMIC_TIMEOUT_ENABLED: true\n"
"g_FIXED_TIMEOUT_LATENCY: 300\n"
"\n"
"\n"
"// tester parameters (overridden by testerconfig.defaults)\n"
"//  \n"
"//  injects random message delays to excite protocol races\n"
"RANDOMIZATION: false\n"
"g_SYNTHETIC_DRIVER: false\n"
"g_DETERMINISTIC_DRIVER: false\n"
"g_trace_warmup_length: 1000000\n"
"g_bash_bandwidth_adaptive_threshold: 0.75\n"
"\n"
"g_tester_length: 0\n"
"// # of synthetic locks == 16 * 128\n"
"g_synthetic_locks: 2048\n"
"g_deterministic_addrs: 1\n"
"g_SpecifiedGenerator: DetermInvGenerator\n"
"g_callback_counter: 0\n"
"g_NUM_COMPLETIONS_BEFORE_PASS: 0\n"
"// parameters used by locking synthetic tester\n"
"g_think_time: 5\n"
"g_hold_time:  5\n"
"g_wait_time:  5\n"
"\n"
"// Princeton Network (Garnet)\n"
"g_GARNET_NETWORK: false\n"
"g_DETAIL_NETWORK: false\n"
"g_NETWORK_TESTING: false\n"
"g_FLIT_SIZE: 16\n"
"g_NUM_PIPE_STAGES: 4\n"
"g_VCS_PER_CLASS: 4\n"
"g_BUFFER_SIZE: 4\n"
"\n"
"///////////////////////////////////////////////////////////////////////////////\n"
"//\n"
"// MemoryControl:\n"
"\n"
"// Basic cycle time of the memory controller.  This defines the period which is\n"
"// used as the memory channel clock period, the address bus bit time, and the\n"
"// memory controller cycle time.\n"
"// Assuming a 200 MHz memory channel (DDR-400, which has 400 bits/sec data),\n"
"// and a 2 GHz Ruby clock:\n"
"MEM_BUS_CYCLE_MULTIPLIER: 10\n"
"\n"
"// How many internal banks in each DRAM chip:\n"
"BANKS_PER_RANK: 8\n"
"\n"
"// How many sets of DRAM chips per DIMM.\n"
"RANKS_PER_DIMM: 2\n"
"\n"
"// How many DIMMs per channel.  (Currently the only thing that\n"
"// matters is the number of ranks per channel, i.e. the product\n"
"// of this parameter and RANKS_PER_DIMM.  But if and when this is\n"
"// expanded to do FB-DIMMs, the distinction between the two\n"
"// will matter.)\n"
"DIMMS_PER_CHANNEL: 2\n"
"\n"
"// Which bits to use to find the bank, rank, and DIMM numbers.\n"
"// You could choose to have the bank bits, rank bits, and DIMM bits\n"
"// in any order; here they are in that order.\n"
"// For these defaults, we assume this format for addresses:\n"
"//    Offset within line:     [5:0]\n"
"//    Memory controller #:    [7:6]\n"
"//    Bank:                  [10:8]\n"
"//    Rank:                    [11]\n"
"//    DIMM:                    [12]\n"
"//    Row addr / Col addr: [top:13]\n"
"// If you get these bits wrong, then some banks won\'t see any\n"
"// requests; you need to check for this in the .stats output.\n"
"BANK_BIT_0: 8\n"
"RANK_BIT_0: 11\n"
"DIMM_BIT_0: 12\n"
"\n"
"// Number of entries max in each bank queues; set to whatever you want.\n"
"// If it is too small, you will see in the .stats file a lot of delay \n"
"// time spent in the common input queue.\n"
"BANK_QUEUE_SIZE: 12\n"
"\n"
"// Bank cycle time (tRC) measured in memory cycles:\n"
"BANK_BUSY_TIME: 11\n"
"\n"
"// This is how many memory address cycles to delay between reads to\n"
"// different ranks of DRAMs to allow for clock skew:\n"
"RANK_RANK_DELAY: 1\n"
"\n"
"// This is how many memory address cycles to delay between a read\n"
"// and a write.  This is based on two things:  (1) the data bus is\n"
"// used one cycle earlier in the operation; (2) a round-trip wire\n"
"// delay from the controller to the DIMM that did the reading.\n"
"READ_WRITE_DELAY: 2\n"
"\n"
"// Basic address and data bus occupancy.  If you are assuming a\n"
"// 16-byte-wide data bus (pairs of DIMMs side-by-side), then\n"
"// the data bus occupancy matches the address bus occupancy at\n"
"// two cycles.  But if the channel is only 8 bytes wide, you\n"
"// need to increase this bus occupancy time to 4 cycles.\n"
"BASIC_BUS_BUSY_TIME: 2\n"
"\n"
"// Latency to returning read request or writeback acknowledgement.\n"
"// Measured in memory address cycles.\n"
"// This equals tRCD + CL + AL + (four bit times)\n"
"//                            + (round trip on channel)\n"
"//                            + (memory control internal delays)\n"
"// It\'s going to be an approximation, so pick what you like.\n"
"// Note:  The fact that latency is a constant, and does not depend on two\n"
"// low-order address bits, implies that our memory controller either:\n"
"// (a) tells the DRAM to read the critical word first, and sends the\n"
"// critical word first back to the CPU, or (b) waits until it has\n"
"// seen all four bit times on the data wires before sending anything\n"
"// back.  Either is plausible.  If (a), remove the \"four bit times\"\n"
"// term from the calculation above.\n"
"MEM_CTL_LATENCY: 12\n"
"\n"
"// refresh_period is the number of memory cycles between refresh\n"
"// of row x in bank n and refresh of row x+1 in bank n.  For DDR-400,\n"
"// this is typically 7.8 usec for commercial systems; after 8192 such\n"
"// refreshes, this will have refreshed the whole chip in 64 msec.  If\n"
"// we have a 5 nsec memory clock, 7800 / 5 = 1560 cycles.  The memory\n"
"// controller will divide this by the total number of banks, and kick\n"
"// off a refresh to *somebody* every time that amount is counted\n"
"// down to zero. (There will be some rounding error there, but it\n"
"// should have minimal effect.)\n"
"REFRESH_PERIOD: 1560\n"
"\n"
"// tFAW is a DRAM chip parameter which restricts the number of\n"
"// activates that can be done within a certain window of time.\n"
"// The window is specified here in terms of number of memory\n"
"// controller cycles.  At most four activates may be done during\n"
"// any such sliding window.  If this number is set to be no more\n"
"// than 4 * BASIC_BUS_BUSY_TIME, it will have no effect.\n"
"// It is typical in real systems for tFAW to have no effect, but\n"
"// it may be useful in throttling power.  Set to zero to ignore.\n"
"TFAW: 0\n"
"\n"
"// By default, the memory controller uses round-robin to arbitrate\n"
"// between ready bank queues for use of the address bus.  If you\n"
"// wish to add randomness to the system, set this parameter to\n"
"// one instead, and it will restart the round-robin pointer at a\n"
"// random bank number each cycle.  If you want additional\n"
"// nondeterminism, set the parameter to some integer n >= 2, and\n"
"// it will in addition add a n% chance each cycle that a ready bank\n"
"// will be delayed an additional cycle.  Note that if you are\n"
"// in MEM_FIXED_DELAY mode (see below), MEM_RANDOM_ARBITRATE=1 will\n"
"// have no effect, but MEM_RANDOM_ARBITRATE=2 or more will.\n"
"MEM_RANDOM_ARBITRATE: 0\n"
"\n"
"// The following parameter, if nonzero, will disable the memory\n"
"// controller and instead give every request a fixed latency.  The\n"
"// nonzero value specified here is measured in memory cycles and is\n"
"// just added to MEM_CTL_LATENCY.  It will also show up in the stats\n"
"// file as a contributor to memory_delays_stalled_at_head_of_bank_queue.\n"
"MEM_FIXED_DELAY: 0\n"
"\n"
"// If instead of DDR-400, you wanted DDR-800, the channel gets faster\n"
"// but the basic operation of the DRAM core is unchanged.\n"
"// Busy times appear to double just because they are measured\n"
"// in smaller clock cycles.  The performance advantage comes because\n"
"// the bus busy times don\'t actually quite double.\n"
"// You would use something like these values:\n"
"//\n"
"// MEM_BUS_CYCLE_MULTIPLIER: 5\n"
"// BANK_BUSY_TIME: 22\n"
"// RANK_RANK_DELAY: 2\n"
"// READ_WRITE_DELAY: 3\n"
"// BASIC_BUS_BUSY_TIME: 3\n"
"// MEM_CTL_LATENCY: 20\n"
"// REFRESH_PERIOD: 3120\n"
"\n"
;
