Terminals unused in grammar

   IMBED
   IMBED_TYPE
   COLON
   DEBUG_EXPR_TOKEN
   DEBUG_MSG_TOKEN
   TYPE_DECL
   TYPE_FIELD
   OTHER
   NOT


State 221 conflicts: 2 shift/reduce
State 222 conflicts: 2 shift/reduce
State 223 conflicts: 2 shift/reduce
State 224 conflicts: 2 shift/reduce
State 225 conflicts: 2 shift/reduce
State 226 conflicts: 2 shift/reduce
State 227 conflicts: 2 shift/reduce
State 228 conflicts: 2 shift/reduce
State 229 conflicts: 2 shift/reduce
State 230 conflicts: 2 shift/reduce
State 231 conflicts: 2 shift/reduce
State 232 conflicts: 2 shift/reduce
State 233 conflicts: 16 shift/reduce
State 234 conflicts: 16 shift/reduce


Grammar

    0 $accept: file $end

    1 file: decl_list

    2 decl_list: decls

    3 decls: decl decls
    4      | /* empty */

    5 decl: MACHINE_DECL '(' ident pair_list ')' '{' decl_list '}'
    6     | ACTION_DECL '(' ident pair_list ')' statement_list
    7     | IN_PORT_DECL '(' ident ',' type ',' var pair_list ')' statement_list
    8     | OUT_PORT_DECL '(' ident ',' type ',' var pair_list ')' SEMICOLON
    9     | TRANSITION_DECL '(' ident_list ',' ident_list ',' ident pair_list ')' ident_list
   10     | TRANSITION_DECL '(' ident_list ',' ident_list pair_list ')' ident_list
   11     | EXTERN_TYPE_DECL '(' type pair_list ')' SEMICOLON
   12     | EXTERN_TYPE_DECL '(' type pair_list ')' '{' type_methods '}'
   13     | GLOBAL_DECL '(' type pair_list ')' '{' type_members '}'
   14     | STRUCT_DECL '(' type pair_list ')' '{' type_members '}'
   15     | ENUM_DECL '(' type pair_list ')' '{' type_enums '}'
   16     | type ident pair_list SEMICOLON
   17     | type ident '(' formal_param_list ')' pair_list SEMICOLON
   18     | void ident '(' formal_param_list ')' pair_list SEMICOLON
   19     | type ident '(' formal_param_list ')' pair_list statement_list
   20     | void ident '(' formal_param_list ')' pair_list statement_list

   21 type_members: type_member type_members
   22             | /* empty */

   23 type_member: type ident pair_list SEMICOLON
   24            | type ident ASSIGN expr SEMICOLON

   25 type_methods: type_method type_methods
   26             | /* empty */

   27 type_method: type_or_void ident '(' type_list ')' pair_list SEMICOLON

   28 type_enums: type_enum type_enums
   29           | /* empty */

   30 type_enum: ident pair_list SEMICOLON

   31 type_list: types
   32          | /* empty */

   33 types: type ',' types
   34      | type

   35 type: ident

   36 void: VOID

   37 type_or_void: type
   38             | void

   39 formal_param_list: formal_params
   40                  | /* empty */

   41 formal_params: formal_param ',' formal_params
   42              | formal_param

   43 formal_param: type ident

   44 ident: IDENT

   45 ident_list: '{' idents '}'
   46           | ident

   47 idents: ident SEMICOLON idents
   48       | ident ',' idents
   49       | ident idents
   50       | /* empty */

   51 pair_list: ',' pairs
   52          | /* empty */

   53 pairs: pair ',' pairs
   54      | pair

   55 pair: ident '=' STRING
   56     | ident '=' ident
   57     | STRING

   58 statement_list: '{' statements '}'

   59 statements: statement statements
   60           | /* empty */

   61 expr_list: expr ',' expr_list
   62          | expr
   63          | /* empty */

   64 statement: expr SEMICOLON
   65          | expr ASSIGN expr SEMICOLON
   66          | ENQUEUE '(' var ',' type pair_list ')' statement_list
   67          | PEEK '(' var ',' type ')' statement_list
   68          | COPY_HEAD '(' var ',' var pair_list ')' SEMICOLON
   69          | CHECK_ALLOCATE '(' var ')' SEMICOLON
   70          | CHECK_STOP_SLOTS '(' var ',' STRING ',' STRING ')' SEMICOLON
   71          | if_statement
   72          | RETURN expr SEMICOLON

   73 if_statement: IF '(' expr ')' statement_list ELSE statement_list
   74             | IF '(' expr ')' statement_list
   75             | IF '(' expr ')' statement_list ELSE if_statement

   76 expr: var
   77     | literal
   78     | enumeration
   79     | ident '(' expr_list ')'
   80     | THIS DOT var '[' expr ']' DOT var DOT ident '(' expr_list ')'
   81     | THIS DOT var '[' expr ']' DOT var DOT field
   82     | CHIP '[' expr ']' DOT var '[' expr ']' DOT var DOT ident '(' expr_list ')'
   83     | CHIP '[' expr ']' DOT var '[' expr ']' DOT var DOT field
   84     | expr DOT field
   85     | expr DOT ident '(' expr_list ')'
   86     | type DOUBLE_COLON ident '(' expr_list ')'
   87     | expr '[' expr_list ']'
   88     | expr STAR expr
   89     | expr SLASH expr
   90     | expr PLUS expr
   91     | expr DASH expr
   92     | expr '<' expr
   93     | expr '>' expr
   94     | expr LE expr
   95     | expr GE expr
   96     | expr EQ expr
   97     | expr NE expr
   98     | expr AND expr
   99     | expr OR expr
  100     | expr RIGHTSHIFT expr
  101     | expr LEFTSHIFT expr
  102     | '(' expr ')'

  103 literal: STRING
  104        | NUMBER
  105        | FLOATNUMBER
  106        | LIT_BOOL

  107 enumeration: ident ':' ident

  108 var: ident

  109 field: ident


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 6 7 8 9 10 11 12 13 14 15 17 18 19 20 27 66 67 68 69 70
    73 74 75 79 80 82 85 86 102
')' (41) 5 6 7 8 9 10 11 12 13 14 15 17 18 19 20 27 66 67 68 69 70
    73 74 75 79 80 82 85 86 102
',' (44) 7 8 9 10 33 41 48 51 53 61 66 67 68 70
':' (58) 107
'<' (60) 92
'=' (61) 55 56
'>' (62) 93
'[' (91) 80 81 82 83 87
']' (93) 80 81 82 83 87
'{' (123) 5 12 13 14 15 45 58
'}' (125) 5 12 13 14 15 45 58
error (256)
IDENT (258) 44
STRING (259) 55 57 70 103
NUMBER (260) 104
FLOATNUMBER (261) 105
LIT_BOOL (262) 106
VOID (263) 36
IMBED (264)
IMBED_TYPE (265)
CHIP (266) 82 83
THIS (267) 80 81
ASSIGN (268) 24 65
DOUBLE_COLON (269) 86
DOT (270) 80 81 82 83 84 85
SEMICOLON (271) 8 11 16 17 18 23 24 27 30 47 64 65 68 69 70 72
COLON (272)
GLOBAL_DECL (273) 13
MACHINE_DECL (274) 5
IN_PORT_DECL (275) 7
OUT_PORT_DECL (276) 8
PEEK (277) 67
ENQUEUE (278) 66
COPY_HEAD (279) 68
CHECK_ALLOCATE (280) 69
CHECK_STOP_SLOTS (281) 70
DEBUG_EXPR_TOKEN (282)
DEBUG_MSG_TOKEN (283)
ACTION_DECL (284) 6
TRANSITION_DECL (285) 9 10
TYPE_DECL (286)
STRUCT_DECL (287) 14
EXTERN_TYPE_DECL (288) 11 12
ENUM_DECL (289) 15
TYPE_FIELD (290)
OTHER (291)
IF (292) 73 74 75
ELSE (293) 73 75
RETURN (294) 72
EQ (295) 96
NE (296) 97
LE (297) 94
GE (298) 95
NOT (299)
AND (300) 98
OR (301) 99
PLUS (302) 90
DASH (303) 91
STAR (304) 88
SLASH (305) 89
RIGHTSHIFT (306) 100
LEFTSHIFT (307) 101


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
file (65)
    on left: 1, on right: 0
decl_list (66)
    on left: 2, on right: 1 5
decls (67)
    on left: 3 4, on right: 2 3
decl (68)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20, on right:
    3
type_members (69)
    on left: 21 22, on right: 13 14 21
type_member (70)
    on left: 23 24, on right: 21
type_methods (71)
    on left: 25 26, on right: 12 25
type_method (72)
    on left: 27, on right: 25
type_enums (73)
    on left: 28 29, on right: 15 28
type_enum (74)
    on left: 30, on right: 28
type_list (75)
    on left: 31 32, on right: 27
types (76)
    on left: 33 34, on right: 31 33
type (77)
    on left: 35, on right: 7 8 11 12 13 14 15 16 17 19 23 24 33 34
    37 43 66 67 86
void (78)
    on left: 36, on right: 18 20 38
type_or_void (79)
    on left: 37 38, on right: 27
formal_param_list (80)
    on left: 39 40, on right: 17 18 19 20
formal_params (81)
    on left: 41 42, on right: 39 41
formal_param (82)
    on left: 43, on right: 41 42
ident (83)
    on left: 44, on right: 5 6 7 8 9 16 17 18 19 20 23 24 27 30 35
    43 46 47 48 49 55 56 79 80 82 85 86 107 108 109
ident_list (84)
    on left: 45 46, on right: 9 10
idents (85)
    on left: 47 48 49 50, on right: 45 47 48 49
pair_list (86)
    on left: 51 52, on right: 5 6 7 8 9 10 11 12 13 14 15 16 17 18
    19 20 23 27 30 66 68
pairs (87)
    on left: 53 54, on right: 51 53
pair (88)
    on left: 55 56 57, on right: 53 54
statement_list (89)
    on left: 58, on right: 6 7 19 20 66 67 73 74 75
statements (90)
    on left: 59 60, on right: 58 59
expr_list (91)
    on left: 61 62 63, on right: 61 79 80 82 85 86 87
statement (92)
    on left: 64 65 66 67 68 69 70 71 72, on right: 59
if_statement (93)
    on left: 73 74 75, on right: 71 75
expr (94)
    on left: 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
    94 95 96 97 98 99 100 101 102, on right: 24 61 62 64 65 72 73 74
    75 80 81 82 83 84 85 87 88 89 90 91 92 93 94 95 96 97 98 99 100
    101 102
literal (95)
    on left: 103 104 105 106, on right: 77
enumeration (96)
    on left: 107, on right: 78
var (97)
    on left: 108, on right: 7 8 66 67 68 69 70 76 80 81 82 83
field (98)
    on left: 109, on right: 81 83 84


state 0

    0 $accept: . file $end

    IDENT             shift, and go to state 1
    VOID              shift, and go to state 2
    GLOBAL_DECL       shift, and go to state 3
    MACHINE_DECL      shift, and go to state 4
    IN_PORT_DECL      shift, and go to state 5
    OUT_PORT_DECL     shift, and go to state 6
    ACTION_DECL       shift, and go to state 7
    TRANSITION_DECL   shift, and go to state 8
    STRUCT_DECL       shift, and go to state 9
    EXTERN_TYPE_DECL  shift, and go to state 10
    ENUM_DECL         shift, and go to state 11

    $default  reduce using rule 4 (decls)

    file       go to state 12
    decl_list  go to state 13
    decls      go to state 14
    decl       go to state 15
    type       go to state 16
    void       go to state 17
    ident      go to state 18


state 1

   44 ident: IDENT .

    $default  reduce using rule 44 (ident)


state 2

   36 void: VOID .

    $default  reduce using rule 36 (void)


state 3

   13 decl: GLOBAL_DECL . '(' type pair_list ')' '{' type_members '}'

    '('  shift, and go to state 19


state 4

    5 decl: MACHINE_DECL . '(' ident pair_list ')' '{' decl_list '}'

    '('  shift, and go to state 20


state 5

    7 decl: IN_PORT_DECL . '(' ident ',' type ',' var pair_list ')' statement_list

    '('  shift, and go to state 21


state 6

    8 decl: OUT_PORT_DECL . '(' ident ',' type ',' var pair_list ')' SEMICOLON

    '('  shift, and go to state 22


state 7

    6 decl: ACTION_DECL . '(' ident pair_list ')' statement_list

    '('  shift, and go to state 23


state 8

    9 decl: TRANSITION_DECL . '(' ident_list ',' ident_list ',' ident pair_list ')' ident_list
   10     | TRANSITION_DECL . '(' ident_list ',' ident_list pair_list ')' ident_list

    '('  shift, and go to state 24


state 9

   14 decl: STRUCT_DECL . '(' type pair_list ')' '{' type_members '}'

    '('  shift, and go to state 25


state 10

   11 decl: EXTERN_TYPE_DECL . '(' type pair_list ')' SEMICOLON
   12     | EXTERN_TYPE_DECL . '(' type pair_list ')' '{' type_methods '}'

    '('  shift, and go to state 26


state 11

   15 decl: ENUM_DECL . '(' type pair_list ')' '{' type_enums '}'

    '('  shift, and go to state 27


state 12

    0 $accept: file . $end

    $end  shift, and go to state 28


state 13

    1 file: decl_list .

    $default  reduce using rule 1 (file)


state 14

    2 decl_list: decls .

    $default  reduce using rule 2 (decl_list)


state 15

    3 decls: decl . decls

    IDENT             shift, and go to state 1
    VOID              shift, and go to state 2
    GLOBAL_DECL       shift, and go to state 3
    MACHINE_DECL      shift, and go to state 4
    IN_PORT_DECL      shift, and go to state 5
    OUT_PORT_DECL     shift, and go to state 6
    ACTION_DECL       shift, and go to state 7
    TRANSITION_DECL   shift, and go to state 8
    STRUCT_DECL       shift, and go to state 9
    EXTERN_TYPE_DECL  shift, and go to state 10
    ENUM_DECL         shift, and go to state 11

    $default  reduce using rule 4 (decls)

    decls  go to state 29
    decl   go to state 15
    type   go to state 16
    void   go to state 17
    ident  go to state 18


state 16

   16 decl: type . ident pair_list SEMICOLON
   17     | type . ident '(' formal_param_list ')' pair_list SEMICOLON
   19     | type . ident '(' formal_param_list ')' pair_list statement_list

    IDENT  shift, and go to state 1

    ident  go to state 30


state 17

   18 decl: void . ident '(' formal_param_list ')' pair_list SEMICOLON
   20     | void . ident '(' formal_param_list ')' pair_list statement_list

    IDENT  shift, and go to state 1

    ident  go to state 31


state 18

   35 type: ident .

    $default  reduce using rule 35 (type)


state 19

   13 decl: GLOBAL_DECL '(' . type pair_list ')' '{' type_members '}'

    IDENT  shift, and go to state 1

    type   go to state 32
    ident  go to state 18


state 20

    5 decl: MACHINE_DECL '(' . ident pair_list ')' '{' decl_list '}'

    IDENT  shift, and go to state 1

    ident  go to state 33


state 21

    7 decl: IN_PORT_DECL '(' . ident ',' type ',' var pair_list ')' statement_list

    IDENT  shift, and go to state 1

    ident  go to state 34


state 22

    8 decl: OUT_PORT_DECL '(' . ident ',' type ',' var pair_list ')' SEMICOLON

    IDENT  shift, and go to state 1

    ident  go to state 35


state 23

    6 decl: ACTION_DECL '(' . ident pair_list ')' statement_list

    IDENT  shift, and go to state 1

    ident  go to state 36


state 24

    9 decl: TRANSITION_DECL '(' . ident_list ',' ident_list ',' ident pair_list ')' ident_list
   10     | TRANSITION_DECL '(' . ident_list ',' ident_list pair_list ')' ident_list

    IDENT  shift, and go to state 1
    '{'    shift, and go to state 37

    ident       go to state 38
    ident_list  go to state 39


state 25

   14 decl: STRUCT_DECL '(' . type pair_list ')' '{' type_members '}'

    IDENT  shift, and go to state 1

    type   go to state 40
    ident  go to state 18


state 26

   11 decl: EXTERN_TYPE_DECL '(' . type pair_list ')' SEMICOLON
   12     | EXTERN_TYPE_DECL '(' . type pair_list ')' '{' type_methods '}'

    IDENT  shift, and go to state 1

    type   go to state 41
    ident  go to state 18


state 27

   15 decl: ENUM_DECL '(' . type pair_list ')' '{' type_enums '}'

    IDENT  shift, and go to state 1

    type   go to state 42
    ident  go to state 18


state 28

    0 $accept: file $end .

    $default  accept


state 29

    3 decls: decl decls .

    $default  reduce using rule 3 (decls)


state 30

   16 decl: type ident . pair_list SEMICOLON
   17     | type ident . '(' formal_param_list ')' pair_list SEMICOLON
   19     | type ident . '(' formal_param_list ')' pair_list statement_list

    '('  shift, and go to state 43
    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 45


state 31

   18 decl: void ident . '(' formal_param_list ')' pair_list SEMICOLON
   20     | void ident . '(' formal_param_list ')' pair_list statement_list

    '('  shift, and go to state 46


state 32

   13 decl: GLOBAL_DECL '(' type . pair_list ')' '{' type_members '}'

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 47


state 33

    5 decl: MACHINE_DECL '(' ident . pair_list ')' '{' decl_list '}'

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 48


state 34

    7 decl: IN_PORT_DECL '(' ident . ',' type ',' var pair_list ')' statement_list

    ','  shift, and go to state 49


state 35

    8 decl: OUT_PORT_DECL '(' ident . ',' type ',' var pair_list ')' SEMICOLON

    ','  shift, and go to state 50


state 36

    6 decl: ACTION_DECL '(' ident . pair_list ')' statement_list

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 51


state 37

   45 ident_list: '{' . idents '}'

    IDENT  shift, and go to state 1

    $default  reduce using rule 50 (idents)

    ident   go to state 52
    idents  go to state 53


state 38

   46 ident_list: ident .

    $default  reduce using rule 46 (ident_list)


state 39

    9 decl: TRANSITION_DECL '(' ident_list . ',' ident_list ',' ident pair_list ')' ident_list
   10     | TRANSITION_DECL '(' ident_list . ',' ident_list pair_list ')' ident_list

    ','  shift, and go to state 54


state 40

   14 decl: STRUCT_DECL '(' type . pair_list ')' '{' type_members '}'

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 55


state 41

   11 decl: EXTERN_TYPE_DECL '(' type . pair_list ')' SEMICOLON
   12     | EXTERN_TYPE_DECL '(' type . pair_list ')' '{' type_methods '}'

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 56


state 42

   15 decl: ENUM_DECL '(' type . pair_list ')' '{' type_enums '}'

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 57


state 43

   17 decl: type ident '(' . formal_param_list ')' pair_list SEMICOLON
   19     | type ident '(' . formal_param_list ')' pair_list statement_list

    IDENT  shift, and go to state 1

    $default  reduce using rule 40 (formal_param_list)

    type               go to state 58
    formal_param_list  go to state 59
    formal_params      go to state 60
    formal_param       go to state 61
    ident              go to state 18


state 44

   51 pair_list: ',' . pairs

    IDENT   shift, and go to state 1
    STRING  shift, and go to state 62

    ident  go to state 63
    pairs  go to state 64
    pair   go to state 65


state 45

   16 decl: type ident pair_list . SEMICOLON

    SEMICOLON  shift, and go to state 66


state 46

   18 decl: void ident '(' . formal_param_list ')' pair_list SEMICOLON
   20     | void ident '(' . formal_param_list ')' pair_list statement_list

    IDENT  shift, and go to state 1

    $default  reduce using rule 40 (formal_param_list)

    type               go to state 58
    formal_param_list  go to state 67
    formal_params      go to state 60
    formal_param       go to state 61
    ident              go to state 18


state 47

   13 decl: GLOBAL_DECL '(' type pair_list . ')' '{' type_members '}'

    ')'  shift, and go to state 68


state 48

    5 decl: MACHINE_DECL '(' ident pair_list . ')' '{' decl_list '}'

    ')'  shift, and go to state 69


state 49

    7 decl: IN_PORT_DECL '(' ident ',' . type ',' var pair_list ')' statement_list

    IDENT  shift, and go to state 1

    type   go to state 70
    ident  go to state 18


state 50

    8 decl: OUT_PORT_DECL '(' ident ',' . type ',' var pair_list ')' SEMICOLON

    IDENT  shift, and go to state 1

    type   go to state 71
    ident  go to state 18


state 51

    6 decl: ACTION_DECL '(' ident pair_list . ')' statement_list

    ')'  shift, and go to state 72


state 52

   47 idents: ident . SEMICOLON idents
   48       | ident . ',' idents
   49       | ident . idents

    IDENT      shift, and go to state 1
    SEMICOLON  shift, and go to state 73
    ','        shift, and go to state 74

    $default  reduce using rule 50 (idents)

    ident   go to state 52
    idents  go to state 75


state 53

   45 ident_list: '{' idents . '}'

    '}'  shift, and go to state 76


state 54

    9 decl: TRANSITION_DECL '(' ident_list ',' . ident_list ',' ident pair_list ')' ident_list
   10     | TRANSITION_DECL '(' ident_list ',' . ident_list pair_list ')' ident_list

    IDENT  shift, and go to state 1
    '{'    shift, and go to state 37

    ident       go to state 38
    ident_list  go to state 77


state 55

   14 decl: STRUCT_DECL '(' type pair_list . ')' '{' type_members '}'

    ')'  shift, and go to state 78


state 56

   11 decl: EXTERN_TYPE_DECL '(' type pair_list . ')' SEMICOLON
   12     | EXTERN_TYPE_DECL '(' type pair_list . ')' '{' type_methods '}'

    ')'  shift, and go to state 79


state 57

   15 decl: ENUM_DECL '(' type pair_list . ')' '{' type_enums '}'

    ')'  shift, and go to state 80


state 58

   43 formal_param: type . ident

    IDENT  shift, and go to state 1

    ident  go to state 81


state 59

   17 decl: type ident '(' formal_param_list . ')' pair_list SEMICOLON
   19     | type ident '(' formal_param_list . ')' pair_list statement_list

    ')'  shift, and go to state 82


state 60

   39 formal_param_list: formal_params .

    $default  reduce using rule 39 (formal_param_list)


state 61

   41 formal_params: formal_param . ',' formal_params
   42              | formal_param .

    ','  shift, and go to state 83

    $default  reduce using rule 42 (formal_params)


state 62

   57 pair: STRING .

    $default  reduce using rule 57 (pair)


state 63

   55 pair: ident . '=' STRING
   56     | ident . '=' ident

    '='  shift, and go to state 84


state 64

   51 pair_list: ',' pairs .

    $default  reduce using rule 51 (pair_list)


state 65

   53 pairs: pair . ',' pairs
   54      | pair .

    ','  shift, and go to state 85

    $default  reduce using rule 54 (pairs)


state 66

   16 decl: type ident pair_list SEMICOLON .

    $default  reduce using rule 16 (decl)


state 67

   18 decl: void ident '(' formal_param_list . ')' pair_list SEMICOLON
   20     | void ident '(' formal_param_list . ')' pair_list statement_list

    ')'  shift, and go to state 86


state 68

   13 decl: GLOBAL_DECL '(' type pair_list ')' . '{' type_members '}'

    '{'  shift, and go to state 87


state 69

    5 decl: MACHINE_DECL '(' ident pair_list ')' . '{' decl_list '}'

    '{'  shift, and go to state 88


state 70

    7 decl: IN_PORT_DECL '(' ident ',' type . ',' var pair_list ')' statement_list

    ','  shift, and go to state 89


state 71

    8 decl: OUT_PORT_DECL '(' ident ',' type . ',' var pair_list ')' SEMICOLON

    ','  shift, and go to state 90


state 72

    6 decl: ACTION_DECL '(' ident pair_list ')' . statement_list

    '{'  shift, and go to state 91

    statement_list  go to state 92


state 73

   47 idents: ident SEMICOLON . idents

    IDENT  shift, and go to state 1

    $default  reduce using rule 50 (idents)

    ident   go to state 52
    idents  go to state 93


state 74

   48 idents: ident ',' . idents

    IDENT  shift, and go to state 1

    $default  reduce using rule 50 (idents)

    ident   go to state 52
    idents  go to state 94


state 75

   49 idents: ident idents .

    $default  reduce using rule 49 (idents)


state 76

   45 ident_list: '{' idents '}' .

    $default  reduce using rule 45 (ident_list)


state 77

    9 decl: TRANSITION_DECL '(' ident_list ',' ident_list . ',' ident pair_list ')' ident_list
   10     | TRANSITION_DECL '(' ident_list ',' ident_list . pair_list ')' ident_list

    ','  shift, and go to state 95

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 96


state 78

   14 decl: STRUCT_DECL '(' type pair_list ')' . '{' type_members '}'

    '{'  shift, and go to state 97


state 79

   11 decl: EXTERN_TYPE_DECL '(' type pair_list ')' . SEMICOLON
   12     | EXTERN_TYPE_DECL '(' type pair_list ')' . '{' type_methods '}'

    SEMICOLON  shift, and go to state 98
    '{'        shift, and go to state 99


state 80

   15 decl: ENUM_DECL '(' type pair_list ')' . '{' type_enums '}'

    '{'  shift, and go to state 100


state 81

   43 formal_param: type ident .

    $default  reduce using rule 43 (formal_param)


state 82

   17 decl: type ident '(' formal_param_list ')' . pair_list SEMICOLON
   19     | type ident '(' formal_param_list ')' . pair_list statement_list

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 101


state 83

   41 formal_params: formal_param ',' . formal_params

    IDENT  shift, and go to state 1

    type           go to state 58
    formal_params  go to state 102
    formal_param   go to state 61
    ident          go to state 18


state 84

   55 pair: ident '=' . STRING
   56     | ident '=' . ident

    IDENT   shift, and go to state 1
    STRING  shift, and go to state 103

    ident  go to state 104


state 85

   53 pairs: pair ',' . pairs

    IDENT   shift, and go to state 1
    STRING  shift, and go to state 62

    ident  go to state 63
    pairs  go to state 105
    pair   go to state 65


state 86

   18 decl: void ident '(' formal_param_list ')' . pair_list SEMICOLON
   20     | void ident '(' formal_param_list ')' . pair_list statement_list

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 106


state 87

   13 decl: GLOBAL_DECL '(' type pair_list ')' '{' . type_members '}'

    IDENT  shift, and go to state 1

    $default  reduce using rule 22 (type_members)

    type_members  go to state 107
    type_member   go to state 108
    type          go to state 109
    ident         go to state 18


state 88

    5 decl: MACHINE_DECL '(' ident pair_list ')' '{' . decl_list '}'

    IDENT             shift, and go to state 1
    VOID              shift, and go to state 2
    GLOBAL_DECL       shift, and go to state 3
    MACHINE_DECL      shift, and go to state 4
    IN_PORT_DECL      shift, and go to state 5
    OUT_PORT_DECL     shift, and go to state 6
    ACTION_DECL       shift, and go to state 7
    TRANSITION_DECL   shift, and go to state 8
    STRUCT_DECL       shift, and go to state 9
    EXTERN_TYPE_DECL  shift, and go to state 10
    ENUM_DECL         shift, and go to state 11

    $default  reduce using rule 4 (decls)

    decl_list  go to state 110
    decls      go to state 14
    decl       go to state 15
    type       go to state 16
    void       go to state 17
    ident      go to state 18


state 89

    7 decl: IN_PORT_DECL '(' ident ',' type ',' . var pair_list ')' statement_list

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 112


state 90

    8 decl: OUT_PORT_DECL '(' ident ',' type ',' . var pair_list ')' SEMICOLON

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 113


state 91

   58 statement_list: '{' . statements '}'

    IDENT             shift, and go to state 1
    STRING            shift, and go to state 114
    NUMBER            shift, and go to state 115
    FLOATNUMBER       shift, and go to state 116
    LIT_BOOL          shift, and go to state 117
    CHIP              shift, and go to state 118
    THIS              shift, and go to state 119
    PEEK              shift, and go to state 120
    ENQUEUE           shift, and go to state 121
    COPY_HEAD         shift, and go to state 122
    CHECK_ALLOCATE    shift, and go to state 123
    CHECK_STOP_SLOTS  shift, and go to state 124
    IF                shift, and go to state 125
    RETURN            shift, and go to state 126
    '('               shift, and go to state 127

    $default  reduce using rule 60 (statements)

    type          go to state 128
    ident         go to state 129
    statements    go to state 130
    statement     go to state 131
    if_statement  go to state 132
    expr          go to state 133
    literal       go to state 134
    enumeration   go to state 135
    var           go to state 136


state 92

    6 decl: ACTION_DECL '(' ident pair_list ')' statement_list .

    $default  reduce using rule 6 (decl)


state 93

   47 idents: ident SEMICOLON idents .

    $default  reduce using rule 47 (idents)


state 94

   48 idents: ident ',' idents .

    $default  reduce using rule 48 (idents)


state 95

    9 decl: TRANSITION_DECL '(' ident_list ',' ident_list ',' . ident pair_list ')' ident_list
   51 pair_list: ',' . pairs

    IDENT   shift, and go to state 1
    STRING  shift, and go to state 62

    ident  go to state 137
    pairs  go to state 64
    pair   go to state 65


state 96

   10 decl: TRANSITION_DECL '(' ident_list ',' ident_list pair_list . ')' ident_list

    ')'  shift, and go to state 138


state 97

   14 decl: STRUCT_DECL '(' type pair_list ')' '{' . type_members '}'

    IDENT  shift, and go to state 1

    $default  reduce using rule 22 (type_members)

    type_members  go to state 139
    type_member   go to state 108
    type          go to state 109
    ident         go to state 18


state 98

   11 decl: EXTERN_TYPE_DECL '(' type pair_list ')' SEMICOLON .

    $default  reduce using rule 11 (decl)


state 99

   12 decl: EXTERN_TYPE_DECL '(' type pair_list ')' '{' . type_methods '}'

    IDENT  shift, and go to state 1
    VOID   shift, and go to state 2

    $default  reduce using rule 26 (type_methods)

    type_methods  go to state 140
    type_method   go to state 141
    type          go to state 142
    void          go to state 143
    type_or_void  go to state 144
    ident         go to state 18


state 100

   15 decl: ENUM_DECL '(' type pair_list ')' '{' . type_enums '}'

    IDENT  shift, and go to state 1

    $default  reduce using rule 29 (type_enums)

    type_enums  go to state 145
    type_enum   go to state 146
    ident       go to state 147


state 101

   17 decl: type ident '(' formal_param_list ')' pair_list . SEMICOLON
   19     | type ident '(' formal_param_list ')' pair_list . statement_list

    SEMICOLON  shift, and go to state 148
    '{'        shift, and go to state 91

    statement_list  go to state 149


state 102

   41 formal_params: formal_param ',' formal_params .

    $default  reduce using rule 41 (formal_params)


state 103

   55 pair: ident '=' STRING .

    $default  reduce using rule 55 (pair)


state 104

   56 pair: ident '=' ident .

    $default  reduce using rule 56 (pair)


state 105

   53 pairs: pair ',' pairs .

    $default  reduce using rule 53 (pairs)


state 106

   18 decl: void ident '(' formal_param_list ')' pair_list . SEMICOLON
   20     | void ident '(' formal_param_list ')' pair_list . statement_list

    SEMICOLON  shift, and go to state 150
    '{'        shift, and go to state 91

    statement_list  go to state 151


state 107

   13 decl: GLOBAL_DECL '(' type pair_list ')' '{' type_members . '}'

    '}'  shift, and go to state 152


state 108

   21 type_members: type_member . type_members

    IDENT  shift, and go to state 1

    $default  reduce using rule 22 (type_members)

    type_members  go to state 153
    type_member   go to state 108
    type          go to state 109
    ident         go to state 18


state 109

   23 type_member: type . ident pair_list SEMICOLON
   24            | type . ident ASSIGN expr SEMICOLON

    IDENT  shift, and go to state 1

    ident  go to state 154


state 110

    5 decl: MACHINE_DECL '(' ident pair_list ')' '{' decl_list . '}'

    '}'  shift, and go to state 155


state 111

  108 var: ident .

    $default  reduce using rule 108 (var)


state 112

    7 decl: IN_PORT_DECL '(' ident ',' type ',' var . pair_list ')' statement_list

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 156


state 113

    8 decl: OUT_PORT_DECL '(' ident ',' type ',' var . pair_list ')' SEMICOLON

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 157


state 114

  103 literal: STRING .

    $default  reduce using rule 103 (literal)


state 115

  104 literal: NUMBER .

    $default  reduce using rule 104 (literal)


state 116

  105 literal: FLOATNUMBER .

    $default  reduce using rule 105 (literal)


state 117

  106 literal: LIT_BOOL .

    $default  reduce using rule 106 (literal)


state 118

   82 expr: CHIP . '[' expr ']' DOT var '[' expr ']' DOT var DOT ident '(' expr_list ')'
   83     | CHIP . '[' expr ']' DOT var '[' expr ']' DOT var DOT field

    '['  shift, and go to state 158


state 119

   80 expr: THIS . DOT var '[' expr ']' DOT var DOT ident '(' expr_list ')'
   81     | THIS . DOT var '[' expr ']' DOT var DOT field

    DOT  shift, and go to state 159


state 120

   67 statement: PEEK . '(' var ',' type ')' statement_list

    '('  shift, and go to state 160


state 121

   66 statement: ENQUEUE . '(' var ',' type pair_list ')' statement_list

    '('  shift, and go to state 161


state 122

   68 statement: COPY_HEAD . '(' var ',' var pair_list ')' SEMICOLON

    '('  shift, and go to state 162


state 123

   69 statement: CHECK_ALLOCATE . '(' var ')' SEMICOLON

    '('  shift, and go to state 163


state 124

   70 statement: CHECK_STOP_SLOTS . '(' var ',' STRING ',' STRING ')' SEMICOLON

    '('  shift, and go to state 164


state 125

   73 if_statement: IF . '(' expr ')' statement_list ELSE statement_list
   74             | IF . '(' expr ')' statement_list
   75             | IF . '(' expr ')' statement_list ELSE if_statement

    '('  shift, and go to state 165


state 126

   72 statement: RETURN . expr SEMICOLON

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 166
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 127

  102 expr: '(' . expr ')'

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 167
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 128

   86 expr: type . DOUBLE_COLON ident '(' expr_list ')'

    DOUBLE_COLON  shift, and go to state 168


state 129

   35 type: ident .
   79 expr: ident . '(' expr_list ')'
  107 enumeration: ident . ':' ident
  108 var: ident .

    '('  shift, and go to state 169
    ':'  shift, and go to state 170

    DOUBLE_COLON  reduce using rule 35 (type)
    $default      reduce using rule 108 (var)


state 130

   58 statement_list: '{' statements . '}'

    '}'  shift, and go to state 171


state 131

   59 statements: statement . statements

    IDENT             shift, and go to state 1
    STRING            shift, and go to state 114
    NUMBER            shift, and go to state 115
    FLOATNUMBER       shift, and go to state 116
    LIT_BOOL          shift, and go to state 117
    CHIP              shift, and go to state 118
    THIS              shift, and go to state 119
    PEEK              shift, and go to state 120
    ENQUEUE           shift, and go to state 121
    COPY_HEAD         shift, and go to state 122
    CHECK_ALLOCATE    shift, and go to state 123
    CHECK_STOP_SLOTS  shift, and go to state 124
    IF                shift, and go to state 125
    RETURN            shift, and go to state 126
    '('               shift, and go to state 127

    $default  reduce using rule 60 (statements)

    type          go to state 128
    ident         go to state 129
    statements    go to state 172
    statement     go to state 131
    if_statement  go to state 132
    expr          go to state 133
    literal       go to state 134
    enumeration   go to state 135
    var           go to state 136


state 132

   71 statement: if_statement .

    $default  reduce using rule 71 (statement)


state 133

   64 statement: expr . SEMICOLON
   65          | expr . ASSIGN expr SEMICOLON
   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    ASSIGN      shift, and go to state 173
    DOT         shift, and go to state 174
    SEMICOLON   shift, and go to state 175
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190


state 134

   77 expr: literal .

    $default  reduce using rule 77 (expr)


state 135

   78 expr: enumeration .

    $default  reduce using rule 78 (expr)


state 136

   76 expr: var .

    $default  reduce using rule 76 (expr)


state 137

    9 decl: TRANSITION_DECL '(' ident_list ',' ident_list ',' ident . pair_list ')' ident_list
   55 pair: ident . '=' STRING
   56     | ident . '=' ident

    ','  shift, and go to state 44
    '='  shift, and go to state 84

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 191


state 138

   10 decl: TRANSITION_DECL '(' ident_list ',' ident_list pair_list ')' . ident_list

    IDENT  shift, and go to state 1
    '{'    shift, and go to state 37

    ident       go to state 38
    ident_list  go to state 192


state 139

   14 decl: STRUCT_DECL '(' type pair_list ')' '{' type_members . '}'

    '}'  shift, and go to state 193


state 140

   12 decl: EXTERN_TYPE_DECL '(' type pair_list ')' '{' type_methods . '}'

    '}'  shift, and go to state 194


state 141

   25 type_methods: type_method . type_methods

    IDENT  shift, and go to state 1
    VOID   shift, and go to state 2

    $default  reduce using rule 26 (type_methods)

    type_methods  go to state 195
    type_method   go to state 141
    type          go to state 142
    void          go to state 143
    type_or_void  go to state 144
    ident         go to state 18


state 142

   37 type_or_void: type .

    $default  reduce using rule 37 (type_or_void)


state 143

   38 type_or_void: void .

    $default  reduce using rule 38 (type_or_void)


state 144

   27 type_method: type_or_void . ident '(' type_list ')' pair_list SEMICOLON

    IDENT  shift, and go to state 1

    ident  go to state 196


state 145

   15 decl: ENUM_DECL '(' type pair_list ')' '{' type_enums . '}'

    '}'  shift, and go to state 197


state 146

   28 type_enums: type_enum . type_enums

    IDENT  shift, and go to state 1

    $default  reduce using rule 29 (type_enums)

    type_enums  go to state 198
    type_enum   go to state 146
    ident       go to state 147


state 147

   30 type_enum: ident . pair_list SEMICOLON

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 199


state 148

   17 decl: type ident '(' formal_param_list ')' pair_list SEMICOLON .

    $default  reduce using rule 17 (decl)


state 149

   19 decl: type ident '(' formal_param_list ')' pair_list statement_list .

    $default  reduce using rule 19 (decl)


state 150

   18 decl: void ident '(' formal_param_list ')' pair_list SEMICOLON .

    $default  reduce using rule 18 (decl)


state 151

   20 decl: void ident '(' formal_param_list ')' pair_list statement_list .

    $default  reduce using rule 20 (decl)


state 152

   13 decl: GLOBAL_DECL '(' type pair_list ')' '{' type_members '}' .

    $default  reduce using rule 13 (decl)


state 153

   21 type_members: type_member type_members .

    $default  reduce using rule 21 (type_members)


state 154

   23 type_member: type ident . pair_list SEMICOLON
   24            | type ident . ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 200
    ','     shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 201


state 155

    5 decl: MACHINE_DECL '(' ident pair_list ')' '{' decl_list '}' .

    $default  reduce using rule 5 (decl)


state 156

    7 decl: IN_PORT_DECL '(' ident ',' type ',' var pair_list . ')' statement_list

    ')'  shift, and go to state 202


state 157

    8 decl: OUT_PORT_DECL '(' ident ',' type ',' var pair_list . ')' SEMICOLON

    ')'  shift, and go to state 203


state 158

   82 expr: CHIP '[' . expr ']' DOT var '[' expr ']' DOT var DOT ident '(' expr_list ')'
   83     | CHIP '[' . expr ']' DOT var '[' expr ']' DOT var DOT field

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 204
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 159

   80 expr: THIS DOT . var '[' expr ']' DOT var DOT ident '(' expr_list ')'
   81     | THIS DOT . var '[' expr ']' DOT var DOT field

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 205


state 160

   67 statement: PEEK '(' . var ',' type ')' statement_list

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 206


state 161

   66 statement: ENQUEUE '(' . var ',' type pair_list ')' statement_list

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 207


state 162

   68 statement: COPY_HEAD '(' . var ',' var pair_list ')' SEMICOLON

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 208


state 163

   69 statement: CHECK_ALLOCATE '(' . var ')' SEMICOLON

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 209


state 164

   70 statement: CHECK_STOP_SLOTS '(' . var ',' STRING ',' STRING ')' SEMICOLON

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 210


state 165

   73 if_statement: IF '(' . expr ')' statement_list ELSE statement_list
   74             | IF '(' . expr ')' statement_list
   75             | IF '(' . expr ')' statement_list ELSE if_statement

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 211
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 166

   72 statement: RETURN expr . SEMICOLON
   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    SEMICOLON   shift, and go to state 212
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190


state 167

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr
  102     | '(' expr . ')'

    DOT         shift, and go to state 174
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190
    ')'         shift, and go to state 213


state 168

   86 expr: type DOUBLE_COLON . ident '(' expr_list ')'

    IDENT  shift, and go to state 1

    ident  go to state 214


state 169

   79 expr: ident '(' . expr_list ')'

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    $default  reduce using rule 63 (expr_list)

    type         go to state 128
    ident        go to state 129
    expr_list    go to state 215
    expr         go to state 216
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 170

  107 enumeration: ident ':' . ident

    IDENT  shift, and go to state 1

    ident  go to state 217


state 171

   58 statement_list: '{' statements '}' .

    $default  reduce using rule 58 (statement_list)


state 172

   59 statements: statement statements .

    $default  reduce using rule 59 (statements)


state 173

   65 statement: expr ASSIGN . expr SEMICOLON

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 218
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 174

   84 expr: expr DOT . field
   85     | expr DOT . ident '(' expr_list ')'

    IDENT  shift, and go to state 1

    ident  go to state 219
    field  go to state 220


state 175

   64 statement: expr SEMICOLON .

    $default  reduce using rule 64 (statement)


state 176

   96 expr: expr EQ . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 221
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 177

   97 expr: expr NE . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 222
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 178

   92 expr: expr '<' . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 223
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 179

   93 expr: expr '>' . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 224
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 180

   94 expr: expr LE . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 225
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 181

   95 expr: expr GE . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 226
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 182

   98 expr: expr AND . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 227
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 183

   99 expr: expr OR . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 228
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 184

   90 expr: expr PLUS . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 229
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 185

   91 expr: expr DASH . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 230
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 186

   88 expr: expr STAR . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 231
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 187

   89 expr: expr SLASH . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 232
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 188

  100 expr: expr RIGHTSHIFT . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 233
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 189

  101 expr: expr LEFTSHIFT . expr

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 234
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 190

   87 expr: expr '[' . expr_list ']'

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    $default  reduce using rule 63 (expr_list)

    type         go to state 128
    ident        go to state 129
    expr_list    go to state 235
    expr         go to state 216
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 191

    9 decl: TRANSITION_DECL '(' ident_list ',' ident_list ',' ident pair_list . ')' ident_list

    ')'  shift, and go to state 236


state 192

   10 decl: TRANSITION_DECL '(' ident_list ',' ident_list pair_list ')' ident_list .

    $default  reduce using rule 10 (decl)


state 193

   14 decl: STRUCT_DECL '(' type pair_list ')' '{' type_members '}' .

    $default  reduce using rule 14 (decl)


state 194

   12 decl: EXTERN_TYPE_DECL '(' type pair_list ')' '{' type_methods '}' .

    $default  reduce using rule 12 (decl)


state 195

   25 type_methods: type_method type_methods .

    $default  reduce using rule 25 (type_methods)


state 196

   27 type_method: type_or_void ident . '(' type_list ')' pair_list SEMICOLON

    '('  shift, and go to state 237


state 197

   15 decl: ENUM_DECL '(' type pair_list ')' '{' type_enums '}' .

    $default  reduce using rule 15 (decl)


state 198

   28 type_enums: type_enum type_enums .

    $default  reduce using rule 28 (type_enums)


state 199

   30 type_enum: ident pair_list . SEMICOLON

    SEMICOLON  shift, and go to state 238


state 200

   24 type_member: type ident ASSIGN . expr SEMICOLON

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 239
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 201

   23 type_member: type ident pair_list . SEMICOLON

    SEMICOLON  shift, and go to state 240


state 202

    7 decl: IN_PORT_DECL '(' ident ',' type ',' var pair_list ')' . statement_list

    '{'  shift, and go to state 91

    statement_list  go to state 241


state 203

    8 decl: OUT_PORT_DECL '(' ident ',' type ',' var pair_list ')' . SEMICOLON

    SEMICOLON  shift, and go to state 242


state 204

   82 expr: CHIP '[' expr . ']' DOT var '[' expr ']' DOT var DOT ident '(' expr_list ')'
   83     | CHIP '[' expr . ']' DOT var '[' expr ']' DOT var DOT field
   84     | expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190
    ']'         shift, and go to state 243


state 205

   80 expr: THIS DOT var . '[' expr ']' DOT var DOT ident '(' expr_list ')'
   81     | THIS DOT var . '[' expr ']' DOT var DOT field

    '['  shift, and go to state 244


state 206

   67 statement: PEEK '(' var . ',' type ')' statement_list

    ','  shift, and go to state 245


state 207

   66 statement: ENQUEUE '(' var . ',' type pair_list ')' statement_list

    ','  shift, and go to state 246


state 208

   68 statement: COPY_HEAD '(' var . ',' var pair_list ')' SEMICOLON

    ','  shift, and go to state 247


state 209

   69 statement: CHECK_ALLOCATE '(' var . ')' SEMICOLON

    ')'  shift, and go to state 248


state 210

   70 statement: CHECK_STOP_SLOTS '(' var . ',' STRING ',' STRING ')' SEMICOLON

    ','  shift, and go to state 249


state 211

   73 if_statement: IF '(' expr . ')' statement_list ELSE statement_list
   74             | IF '(' expr . ')' statement_list
   75             | IF '(' expr . ')' statement_list ELSE if_statement
   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190
    ')'         shift, and go to state 250


state 212

   72 statement: RETURN expr SEMICOLON .

    $default  reduce using rule 72 (statement)


state 213

  102 expr: '(' expr ')' .

    $default  reduce using rule 102 (expr)


state 214

   86 expr: type DOUBLE_COLON ident . '(' expr_list ')'

    '('  shift, and go to state 251


state 215

   79 expr: ident '(' expr_list . ')'

    ')'  shift, and go to state 252


state 216

   61 expr_list: expr . ',' expr_list
   62          | expr .
   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190
    ','         shift, and go to state 253

    $default  reduce using rule 62 (expr_list)


state 217

  107 enumeration: ident ':' ident .

    $default  reduce using rule 107 (enumeration)


state 218

   65 statement: expr ASSIGN expr . SEMICOLON
   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    SEMICOLON   shift, and go to state 254
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190


state 219

   85 expr: expr DOT ident . '(' expr_list ')'
  109 field: ident .

    '('  shift, and go to state 255

    $default  reduce using rule 109 (field)


state 220

   84 expr: expr DOT field .

    $default  reduce using rule 84 (expr)


state 221

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   96     | expr EQ expr .
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    EQ  error (nonassociative)
    NE  error (nonassociative)

    RIGHTSHIFT  [reduce using rule 96 (expr)]
    LEFTSHIFT   [reduce using rule 96 (expr)]
    $default    reduce using rule 96 (expr)


state 222

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   97     | expr NE expr .
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    EQ  error (nonassociative)
    NE  error (nonassociative)

    RIGHTSHIFT  [reduce using rule 97 (expr)]
    LEFTSHIFT   [reduce using rule 97 (expr)]
    $default    reduce using rule 97 (expr)


state 223

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   92     | expr '<' expr .
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    RIGHTSHIFT  [reduce using rule 92 (expr)]
    LEFTSHIFT   [reduce using rule 92 (expr)]
    $default    reduce using rule 92 (expr)


state 224

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   93     | expr '>' expr .
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    RIGHTSHIFT  [reduce using rule 93 (expr)]
    LEFTSHIFT   [reduce using rule 93 (expr)]
    $default    reduce using rule 93 (expr)


state 225

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   94     | expr LE expr .
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    RIGHTSHIFT  [reduce using rule 94 (expr)]
    LEFTSHIFT   [reduce using rule 94 (expr)]
    $default    reduce using rule 94 (expr)


state 226

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   95     | expr GE expr .
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    LE   error (nonassociative)
    GE   error (nonassociative)

    RIGHTSHIFT  [reduce using rule 95 (expr)]
    LEFTSHIFT   [reduce using rule 95 (expr)]
    $default    reduce using rule 95 (expr)


state 227

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   98     | expr AND expr .
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    RIGHTSHIFT  [reduce using rule 98 (expr)]
    LEFTSHIFT   [reduce using rule 98 (expr)]
    $default    reduce using rule 98 (expr)


state 228

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
   99     | expr OR expr .
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    RIGHTSHIFT  [reduce using rule 99 (expr)]
    LEFTSHIFT   [reduce using rule 99 (expr)]
    $default    reduce using rule 99 (expr)


state 229

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   90     | expr PLUS expr .
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    RIGHTSHIFT  [reduce using rule 90 (expr)]
    LEFTSHIFT   [reduce using rule 90 (expr)]
    $default    reduce using rule 90 (expr)


state 230

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   91     | expr DASH expr .
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    RIGHTSHIFT  [reduce using rule 91 (expr)]
    LEFTSHIFT   [reduce using rule 91 (expr)]
    $default    reduce using rule 91 (expr)


state 231

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   88     | expr STAR expr .
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    RIGHTSHIFT  [reduce using rule 88 (expr)]
    LEFTSHIFT   [reduce using rule 88 (expr)]
    $default    reduce using rule 88 (expr)


state 232

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   89     | expr SLASH expr .
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    RIGHTSHIFT  [reduce using rule 89 (expr)]
    LEFTSHIFT   [reduce using rule 89 (expr)]
    $default    reduce using rule 89 (expr)


state 233

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  100     | expr RIGHTSHIFT expr .
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    DOT         [reduce using rule 100 (expr)]
    EQ          [reduce using rule 100 (expr)]
    NE          [reduce using rule 100 (expr)]
    '<'         [reduce using rule 100 (expr)]
    '>'         [reduce using rule 100 (expr)]
    LE          [reduce using rule 100 (expr)]
    GE          [reduce using rule 100 (expr)]
    AND         [reduce using rule 100 (expr)]
    OR          [reduce using rule 100 (expr)]
    PLUS        [reduce using rule 100 (expr)]
    DASH        [reduce using rule 100 (expr)]
    STAR        [reduce using rule 100 (expr)]
    SLASH       [reduce using rule 100 (expr)]
    RIGHTSHIFT  [reduce using rule 100 (expr)]
    LEFTSHIFT   [reduce using rule 100 (expr)]
    '['         [reduce using rule 100 (expr)]
    $default    reduce using rule 100 (expr)


state 234

   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr
  101     | expr LEFTSHIFT expr .

    DOT         shift, and go to state 174
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190

    DOT         [reduce using rule 101 (expr)]
    EQ          [reduce using rule 101 (expr)]
    NE          [reduce using rule 101 (expr)]
    '<'         [reduce using rule 101 (expr)]
    '>'         [reduce using rule 101 (expr)]
    LE          [reduce using rule 101 (expr)]
    GE          [reduce using rule 101 (expr)]
    AND         [reduce using rule 101 (expr)]
    OR          [reduce using rule 101 (expr)]
    PLUS        [reduce using rule 101 (expr)]
    DASH        [reduce using rule 101 (expr)]
    STAR        [reduce using rule 101 (expr)]
    SLASH       [reduce using rule 101 (expr)]
    RIGHTSHIFT  [reduce using rule 101 (expr)]
    LEFTSHIFT   [reduce using rule 101 (expr)]
    '['         [reduce using rule 101 (expr)]
    $default    reduce using rule 101 (expr)


state 235

   87 expr: expr '[' expr_list . ']'

    ']'  shift, and go to state 256


state 236

    9 decl: TRANSITION_DECL '(' ident_list ',' ident_list ',' ident pair_list ')' . ident_list

    IDENT  shift, and go to state 1
    '{'    shift, and go to state 37

    ident       go to state 38
    ident_list  go to state 257


state 237

   27 type_method: type_or_void ident '(' . type_list ')' pair_list SEMICOLON

    IDENT  shift, and go to state 1

    $default  reduce using rule 32 (type_list)

    type_list  go to state 258
    types      go to state 259
    type       go to state 260
    ident      go to state 18


state 238

   30 type_enum: ident pair_list SEMICOLON .

    $default  reduce using rule 30 (type_enum)


state 239

   24 type_member: type ident ASSIGN expr . SEMICOLON
   84 expr: expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    SEMICOLON   shift, and go to state 261
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190


state 240

   23 type_member: type ident pair_list SEMICOLON .

    $default  reduce using rule 23 (type_member)


state 241

    7 decl: IN_PORT_DECL '(' ident ',' type ',' var pair_list ')' statement_list .

    $default  reduce using rule 7 (decl)


state 242

    8 decl: OUT_PORT_DECL '(' ident ',' type ',' var pair_list ')' SEMICOLON .

    $default  reduce using rule 8 (decl)


state 243

   82 expr: CHIP '[' expr ']' . DOT var '[' expr ']' DOT var DOT ident '(' expr_list ')'
   83     | CHIP '[' expr ']' . DOT var '[' expr ']' DOT var DOT field

    DOT  shift, and go to state 262


state 244

   80 expr: THIS DOT var '[' . expr ']' DOT var DOT ident '(' expr_list ')'
   81     | THIS DOT var '[' . expr ']' DOT var DOT field

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 263
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 245

   67 statement: PEEK '(' var ',' . type ')' statement_list

    IDENT  shift, and go to state 1

    type   go to state 264
    ident  go to state 18


state 246

   66 statement: ENQUEUE '(' var ',' . type pair_list ')' statement_list

    IDENT  shift, and go to state 1

    type   go to state 265
    ident  go to state 18


state 247

   68 statement: COPY_HEAD '(' var ',' . var pair_list ')' SEMICOLON

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 266


state 248

   69 statement: CHECK_ALLOCATE '(' var ')' . SEMICOLON

    SEMICOLON  shift, and go to state 267


state 249

   70 statement: CHECK_STOP_SLOTS '(' var ',' . STRING ',' STRING ')' SEMICOLON

    STRING  shift, and go to state 268


state 250

   73 if_statement: IF '(' expr ')' . statement_list ELSE statement_list
   74             | IF '(' expr ')' . statement_list
   75             | IF '(' expr ')' . statement_list ELSE if_statement

    '{'  shift, and go to state 91

    statement_list  go to state 269


state 251

   86 expr: type DOUBLE_COLON ident '(' . expr_list ')'

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    $default  reduce using rule 63 (expr_list)

    type         go to state 128
    ident        go to state 129
    expr_list    go to state 270
    expr         go to state 216
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 252

   79 expr: ident '(' expr_list ')' .

    $default  reduce using rule 79 (expr)


state 253

   61 expr_list: expr ',' . expr_list

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    $default  reduce using rule 63 (expr_list)

    type         go to state 128
    ident        go to state 129
    expr_list    go to state 271
    expr         go to state 216
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 254

   65 statement: expr ASSIGN expr SEMICOLON .

    $default  reduce using rule 65 (statement)


state 255

   85 expr: expr DOT ident '(' . expr_list ')'

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    $default  reduce using rule 63 (expr_list)

    type         go to state 128
    ident        go to state 129
    expr_list    go to state 272
    expr         go to state 216
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 256

   87 expr: expr '[' expr_list ']' .

    $default  reduce using rule 87 (expr)


state 257

    9 decl: TRANSITION_DECL '(' ident_list ',' ident_list ',' ident pair_list ')' ident_list .

    $default  reduce using rule 9 (decl)


state 258

   27 type_method: type_or_void ident '(' type_list . ')' pair_list SEMICOLON

    ')'  shift, and go to state 273


state 259

   31 type_list: types .

    $default  reduce using rule 31 (type_list)


state 260

   33 types: type . ',' types
   34      | type .

    ','  shift, and go to state 274

    $default  reduce using rule 34 (types)


state 261

   24 type_member: type ident ASSIGN expr SEMICOLON .

    $default  reduce using rule 24 (type_member)


state 262

   82 expr: CHIP '[' expr ']' DOT . var '[' expr ']' DOT var DOT ident '(' expr_list ')'
   83     | CHIP '[' expr ']' DOT . var '[' expr ']' DOT var DOT field

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 275


state 263

   80 expr: THIS DOT var '[' expr . ']' DOT var DOT ident '(' expr_list ')'
   81     | THIS DOT var '[' expr . ']' DOT var DOT field
   84     | expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190
    ']'         shift, and go to state 276


state 264

   67 statement: PEEK '(' var ',' type . ')' statement_list

    ')'  shift, and go to state 277


state 265

   66 statement: ENQUEUE '(' var ',' type . pair_list ')' statement_list

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 278


state 266

   68 statement: COPY_HEAD '(' var ',' var . pair_list ')' SEMICOLON

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 279


state 267

   69 statement: CHECK_ALLOCATE '(' var ')' SEMICOLON .

    $default  reduce using rule 69 (statement)


state 268

   70 statement: CHECK_STOP_SLOTS '(' var ',' STRING . ',' STRING ')' SEMICOLON

    ','  shift, and go to state 280


state 269

   73 if_statement: IF '(' expr ')' statement_list . ELSE statement_list
   74             | IF '(' expr ')' statement_list .
   75             | IF '(' expr ')' statement_list . ELSE if_statement

    ELSE  shift, and go to state 281

    $default  reduce using rule 74 (if_statement)


state 270

   86 expr: type DOUBLE_COLON ident '(' expr_list . ')'

    ')'  shift, and go to state 282


state 271

   61 expr_list: expr ',' expr_list .

    $default  reduce using rule 61 (expr_list)


state 272

   85 expr: expr DOT ident '(' expr_list . ')'

    ')'  shift, and go to state 283


state 273

   27 type_method: type_or_void ident '(' type_list ')' . pair_list SEMICOLON

    ','  shift, and go to state 44

    $default  reduce using rule 52 (pair_list)

    pair_list  go to state 284


state 274

   33 types: type ',' . types

    IDENT  shift, and go to state 1

    types  go to state 285
    type   go to state 260
    ident  go to state 18


state 275

   82 expr: CHIP '[' expr ']' DOT var . '[' expr ']' DOT var DOT ident '(' expr_list ')'
   83     | CHIP '[' expr ']' DOT var . '[' expr ']' DOT var DOT field

    '['  shift, and go to state 286


state 276

   80 expr: THIS DOT var '[' expr ']' . DOT var DOT ident '(' expr_list ')'
   81     | THIS DOT var '[' expr ']' . DOT var DOT field

    DOT  shift, and go to state 287


state 277

   67 statement: PEEK '(' var ',' type ')' . statement_list

    '{'  shift, and go to state 91

    statement_list  go to state 288


state 278

   66 statement: ENQUEUE '(' var ',' type pair_list . ')' statement_list

    ')'  shift, and go to state 289


state 279

   68 statement: COPY_HEAD '(' var ',' var pair_list . ')' SEMICOLON

    ')'  shift, and go to state 290


state 280

   70 statement: CHECK_STOP_SLOTS '(' var ',' STRING ',' . STRING ')' SEMICOLON

    STRING  shift, and go to state 291


state 281

   73 if_statement: IF '(' expr ')' statement_list ELSE . statement_list
   75             | IF '(' expr ')' statement_list ELSE . if_statement

    IF   shift, and go to state 125
    '{'  shift, and go to state 91

    statement_list  go to state 292
    if_statement    go to state 293


state 282

   86 expr: type DOUBLE_COLON ident '(' expr_list ')' .

    $default  reduce using rule 86 (expr)


state 283

   85 expr: expr DOT ident '(' expr_list ')' .

    $default  reduce using rule 85 (expr)


state 284

   27 type_method: type_or_void ident '(' type_list ')' pair_list . SEMICOLON

    SEMICOLON  shift, and go to state 294


state 285

   33 types: type ',' types .

    $default  reduce using rule 33 (types)


state 286

   82 expr: CHIP '[' expr ']' DOT var '[' . expr ']' DOT var DOT ident '(' expr_list ')'
   83     | CHIP '[' expr ']' DOT var '[' . expr ']' DOT var DOT field

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    type         go to state 128
    ident        go to state 129
    expr         go to state 295
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 287

   80 expr: THIS DOT var '[' expr ']' DOT . var DOT ident '(' expr_list ')'
   81     | THIS DOT var '[' expr ']' DOT . var DOT field

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 296


state 288

   67 statement: PEEK '(' var ',' type ')' statement_list .

    $default  reduce using rule 67 (statement)


state 289

   66 statement: ENQUEUE '(' var ',' type pair_list ')' . statement_list

    '{'  shift, and go to state 91

    statement_list  go to state 297


state 290

   68 statement: COPY_HEAD '(' var ',' var pair_list ')' . SEMICOLON

    SEMICOLON  shift, and go to state 298


state 291

   70 statement: CHECK_STOP_SLOTS '(' var ',' STRING ',' STRING . ')' SEMICOLON

    ')'  shift, and go to state 299


state 292

   73 if_statement: IF '(' expr ')' statement_list ELSE statement_list .

    $default  reduce using rule 73 (if_statement)


state 293

   75 if_statement: IF '(' expr ')' statement_list ELSE if_statement .

    $default  reduce using rule 75 (if_statement)


state 294

   27 type_method: type_or_void ident '(' type_list ')' pair_list SEMICOLON .

    $default  reduce using rule 27 (type_method)


state 295

   82 expr: CHIP '[' expr ']' DOT var '[' expr . ']' DOT var DOT ident '(' expr_list ')'
   83     | CHIP '[' expr ']' DOT var '[' expr . ']' DOT var DOT field
   84     | expr . DOT field
   85     | expr . DOT ident '(' expr_list ')'
   87     | expr . '[' expr_list ']'
   88     | expr . STAR expr
   89     | expr . SLASH expr
   90     | expr . PLUS expr
   91     | expr . DASH expr
   92     | expr . '<' expr
   93     | expr . '>' expr
   94     | expr . LE expr
   95     | expr . GE expr
   96     | expr . EQ expr
   97     | expr . NE expr
   98     | expr . AND expr
   99     | expr . OR expr
  100     | expr . RIGHTSHIFT expr
  101     | expr . LEFTSHIFT expr

    DOT         shift, and go to state 174
    EQ          shift, and go to state 176
    NE          shift, and go to state 177
    '<'         shift, and go to state 178
    '>'         shift, and go to state 179
    LE          shift, and go to state 180
    GE          shift, and go to state 181
    AND         shift, and go to state 182
    OR          shift, and go to state 183
    PLUS        shift, and go to state 184
    DASH        shift, and go to state 185
    STAR        shift, and go to state 186
    SLASH       shift, and go to state 187
    RIGHTSHIFT  shift, and go to state 188
    LEFTSHIFT   shift, and go to state 189
    '['         shift, and go to state 190
    ']'         shift, and go to state 300


state 296

   80 expr: THIS DOT var '[' expr ']' DOT var . DOT ident '(' expr_list ')'
   81     | THIS DOT var '[' expr ']' DOT var . DOT field

    DOT  shift, and go to state 301


state 297

   66 statement: ENQUEUE '(' var ',' type pair_list ')' statement_list .

    $default  reduce using rule 66 (statement)


state 298

   68 statement: COPY_HEAD '(' var ',' var pair_list ')' SEMICOLON .

    $default  reduce using rule 68 (statement)


state 299

   70 statement: CHECK_STOP_SLOTS '(' var ',' STRING ',' STRING ')' . SEMICOLON

    SEMICOLON  shift, and go to state 302


state 300

   82 expr: CHIP '[' expr ']' DOT var '[' expr ']' . DOT var DOT ident '(' expr_list ')'
   83     | CHIP '[' expr ']' DOT var '[' expr ']' . DOT var DOT field

    DOT  shift, and go to state 303


state 301

   80 expr: THIS DOT var '[' expr ']' DOT var DOT . ident '(' expr_list ')'
   81     | THIS DOT var '[' expr ']' DOT var DOT . field

    IDENT  shift, and go to state 1

    ident  go to state 304
    field  go to state 305


state 302

   70 statement: CHECK_STOP_SLOTS '(' var ',' STRING ',' STRING ')' SEMICOLON .

    $default  reduce using rule 70 (statement)


state 303

   82 expr: CHIP '[' expr ']' DOT var '[' expr ']' DOT . var DOT ident '(' expr_list ')'
   83     | CHIP '[' expr ']' DOT var '[' expr ']' DOT . var DOT field

    IDENT  shift, and go to state 1

    ident  go to state 111
    var    go to state 306


state 304

   80 expr: THIS DOT var '[' expr ']' DOT var DOT ident . '(' expr_list ')'
  109 field: ident .

    '('  shift, and go to state 307

    $default  reduce using rule 109 (field)


state 305

   81 expr: THIS DOT var '[' expr ']' DOT var DOT field .

    $default  reduce using rule 81 (expr)


state 306

   82 expr: CHIP '[' expr ']' DOT var '[' expr ']' DOT var . DOT ident '(' expr_list ')'
   83     | CHIP '[' expr ']' DOT var '[' expr ']' DOT var . DOT field

    DOT  shift, and go to state 308


state 307

   80 expr: THIS DOT var '[' expr ']' DOT var DOT ident '(' . expr_list ')'

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    $default  reduce using rule 63 (expr_list)

    type         go to state 128
    ident        go to state 129
    expr_list    go to state 309
    expr         go to state 216
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 308

   82 expr: CHIP '[' expr ']' DOT var '[' expr ']' DOT var DOT . ident '(' expr_list ')'
   83     | CHIP '[' expr ']' DOT var '[' expr ']' DOT var DOT . field

    IDENT  shift, and go to state 1

    ident  go to state 310
    field  go to state 311


state 309

   80 expr: THIS DOT var '[' expr ']' DOT var DOT ident '(' expr_list . ')'

    ')'  shift, and go to state 312


state 310

   82 expr: CHIP '[' expr ']' DOT var '[' expr ']' DOT var DOT ident . '(' expr_list ')'
  109 field: ident .

    '('  shift, and go to state 313

    $default  reduce using rule 109 (field)


state 311

   83 expr: CHIP '[' expr ']' DOT var '[' expr ']' DOT var DOT field .

    $default  reduce using rule 83 (expr)


state 312

   80 expr: THIS DOT var '[' expr ']' DOT var DOT ident '(' expr_list ')' .

    $default  reduce using rule 80 (expr)


state 313

   82 expr: CHIP '[' expr ']' DOT var '[' expr ']' DOT var DOT ident '(' . expr_list ')'

    IDENT        shift, and go to state 1
    STRING       shift, and go to state 114
    NUMBER       shift, and go to state 115
    FLOATNUMBER  shift, and go to state 116
    LIT_BOOL     shift, and go to state 117
    CHIP         shift, and go to state 118
    THIS         shift, and go to state 119
    '('          shift, and go to state 127

    $default  reduce using rule 63 (expr_list)

    type         go to state 128
    ident        go to state 129
    expr_list    go to state 314
    expr         go to state 216
    literal      go to state 134
    enumeration  go to state 135
    var          go to state 136


state 314

   82 expr: CHIP '[' expr ']' DOT var '[' expr ']' DOT var DOT ident '(' expr_list . ')'

    ')'  shift, and go to state 315


state 315

   82 expr: CHIP '[' expr ']' DOT var '[' expr ']' DOT var DOT ident '(' expr_list ')' .

    $default  reduce using rule 82 (expr)
